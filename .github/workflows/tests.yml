# name: GitHub Actions Demo
# on: [push]
# jobs:
#   Explore-GitHub-Actions:
#     runs-on: ubuntu-latest
#     steps:
#       - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
#       - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
#       - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
#       - name: Check out repository code
#         uses: actions/checkout@v2
#       - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
#       - run: echo "🖥️ The workflow is now ready to test your code on the runner."
#       - name: List files in the repository
#         run: |
#           ls ${{ github.workspace }}
#       - run: echo "🍏 This job's status is ${{ job.status }}."
name: stresty ci

on: [push]

jobs:
  clojure:
    # strategy:
    #   matrix:
    #     os: [ubuntu-latest, macOS-latest, windows-latest]

    # runs-on: ${{ matrix.os }}
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: install java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt' # See 'Supported distributions' for available options
          java-version: '11'

      - name: install clj
        uses: DeLaGuardo/setup-clojure@3.2
        with:
          cli: 1.10.3.822

      - name: install rlwrap
        run: sudo apt-get install -y rlwrap

      - name: cache mvn
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('deps.edn')}}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: run tests
        run: make test

      - name: Setup Graalvm
        id: setup-graalvm
        uses: DeLaGuardo/setup-graalvm@master
        with:
          # GraalVM version, no pattern syntax available atm
          graalvm: '21.0.0.2'
          # Java version, optional, defaults to 'java8'. Available options are 'java8' and 'java11'.
          java: 'java11'
          # Architecture flag, optional, defaults to 'amd64'. Available options are 'amd64' and 'aarch64'. Later is available only for linux runners.
          arch: 'amd64'

      - name: Install native-image component
        run: gu.cmd install native-image

      - name: build native
        run: make build-native


